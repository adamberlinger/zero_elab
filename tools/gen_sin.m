% Invoke by calling 'octave tools/gen_sin_samples.m'
%    from the project root folder

1; % Prevent Octave from thinking that this is a function file

function gen_sin_samples (samples, out_file)
  r1 = 2^16;
  r2 = 2^32;

  t = 0:(1/samples):1-(1/samples);
  s = sin(t*2*pi);
  u1 = round(s * (r1/2 - 1) + r1/2);
  u2 = round(s * (r2/2 - 1) + r2/2);

  fw=fopen(out_file,'w');
  fprintf(fw,'/* File generated by tools/gen_sin.m */\n');
  fprintf(fw,'#if SAMPLE_TABLE_RESOLUTION == 16\n');
  fprintf(fw,'static const uint16_t sin_samples[%d] = {\n',samples);
  for i=1:samples
      fprintf(fw,'%d,',u1(i));
      if(mod(i,10) == 0)
          fprintf(fw,'\n');
      end
  end
  fprintf(fw,'};\n');

  fprintf(fw,'#elif SAMPLE_TABLE_RESOLUTION == 32\n');
  fprintf(fw,'static const uint32_t sin_samples[%d] = {\n',samples);
  for i=1:samples
      fprintf(fw,'%u,',u2(i));
      if(mod(i,10) == 0)
          fprintf(fw,'\n');
      end
  end
  fprintf(fw,'};\n');
  fprintf(fw,'#endif\n');
  fclose(out_file);
endfunction

gen_sin_samples (64, 'modules/sin_tables/table64.h');
gen_sin_samples (128, 'modules/sin_tables/table128.h');
gen_sin_samples (256, 'modules/sin_tables/table256.h');
gen_sin_samples (512, 'modules/sin_tables/table512.h');
gen_sin_samples (1024, 'modules/sin_tables/table1024.h');
gen_sin_samples (2048, 'modules/sin_tables/table2048.h');
gen_sin_samples (4096, 'modules/sin_tables/table4096.h');
gen_sin_samples (8192, 'modules/sin_tables/table8192.h');
